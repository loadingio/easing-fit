/*
  JavaScript implementation of
  Algorithm for Automatically Fitting Digitized Curves
  by Philip J. Schneider
  "Graphics Gems", Academic Press, 1990

  The MIT License (MIT)

  https://github.com/soswow/fit-curves
*/
(function(y,v){if("function"===typeof define&&define.amd)define(["module"],v);else if("undefined"!==typeof exports)v(module);else{var w={exports:{}};v(w);y.fitCurve=w.exports}})(this,function(y){function v(a,c){if(!(a instanceof c))throw new TypeError("Cannot call a class as a function");}function w(a,c,b,g,k){var m,f,n,l,h,e,p,q;if(2===a.length)return g=d.vectorLen(d.subtract(a[0],a[1]))/3,m=[a[0],d.addArrays(a[0],d.mulItems(c,g)),d.addArrays(a[1],d.mulItems(b,g)),a[1]],[m];f=A(a);e=z(a,f,f,c,b,
k);m=e[0];l=e[1];e=e[2];if(l<g)return[m];if(l<g*g)for(n=f,h=l,p=e,q=0;20>q;q++){n=B(m,a,n);e=z(a,f,n,c,b,k);m=e[0];l=e[1];e=e[2];if(l<g)return[m];if(e===p&&(h=l/h,.9999<h&&1.0001>h))break;h=l;p=e}m=[];f=d.subtract(a[e-1],a[e+1]);0===f[0]&&0===f[1]&&(f=d.subtract(a[e-1],a[e]).reverse(),f[0]=-f[0]);f=d.normalize(f);l=d.mulItems(f,-1);m=m.concat(w(a.slice(0,e+1),c,f,g,k));return m=m.concat(w(a.slice(e),l,b,g,k))}function z(a,c,b,g,k,m){var f,n,l,h,e,p,q,t,r=a[0],u=a[a.length-1];f=[r,null,null,u];n=d.zeros_Xx2x2(b.length);
p=0;for(q=b.length;p<q;p++)t=b[p],h=1-t,l=n[p],l[0]=d.mulItems(g,3*t*h*h),l[1]=d.mulItems(k,3*h*t*t);h=[[0,0],[0,0]];e=[0,0];p=0;for(q=a.length;p<q;p++)t=b[p],l=n[p],h[0][0]+=d.dot(l[0],l[0]),h[0][1]+=d.dot(l[0],l[1]),h[1][0]+=d.dot(l[0],l[1]),h[1][1]+=d.dot(l[1],l[1]),t=d.subtract(a[p],x.q([r,r,u,u],t)),e[0]+=d.dot(l[0],t),e[1]+=d.dot(l[1],t);b=h[0][0]*h[1][1]-h[1][0]*h[0][1];n=h[0][0]*e[1]-h[1][0]*e[0];h=e[0]*h[1][1]-e[1]*h[0][1];h=0===b?0:h/b;e=0===b?0:n/b;n=d.vectorLen(d.subtract(r,u));b=1E-6*
n;h<b||e<b?(f[1]=d.addArrays(r,d.mulItems(g,n/3)),f[2]=d.addArrays(u,d.mulItems(k,n/3))):(f[1]=d.addArrays(r,d.mulItems(g,h)),f[2]=d.addArrays(u,d.mulItems(k,e)));g=0;k=a.length/2;h=C(f,10);r=0;for(u=a.length;r<u;r++){e=a[r];b=c[r];if(0>b)b=0;else if(1<b)b=1;else{n=void 0;for(q=1;10>=q;q++)if(b<=h[q]){p=(q-1)/10;l=q/10;n=h[q-1];q=h[q];n=(b-n)/(q-n)*(l-p)+p;break}b=n}e=d.subtract(x.q(f,b),e);e=e[0]*e[0]+e[1]*e[1];e>g&&(g=e,k=r)}k=[g,k];g=k[0];k=k[1];m&&m({bez:f,points:a,params:c,maxErr:g,maxPoint:k});
return[f,g,k]}function B(a,c,b){return b.map(function(b,k){var g=c[k],f=d.subtract(x.q(a,b),g),n=x.qprime(a,b),g=d.mulMatrix(f,n),f=d.sum(d.addItems(d.squareItems(n),d.mulMatrix(f,x.qprimeprime(a,b))));return 0===f?b:b-g/f})}function A(a){var c=[],b,g,k;a.forEach(function(a,f){b=f?g+d.vectorLen(d.subtract(a,k)):0;c.push(b);g=b;k=a});return c=c.map(function(b){return b/g})}var C=function(a,c){for(var b,g=[0],k=a[0],m=0,f=1;f<=c;f++)b=x.q(a,f/c),m+=d.vectorLen(d.subtract(b,k)),g.push(m),k=b;return g=
g.map(function(b){return b/m})},d=function(){function a(){v(this,a)}a.zeros_Xx2x2=function(c){for(var b=[];c--;)b.push([0,0]);return b};a.mulItems=function(c,b){return[c[0]*b,c[1]*b]};a.mulMatrix=function(c,b){return c[0]*b[0]+c[1]*b[1]};a.subtract=function(c,b){return[c[0]-b[0],c[1]-b[1]]};a.addArrays=function(c,b){return[c[0]+b[0],c[1]+b[1]]};a.addItems=function(c,b){return[c[0]+b,c[1]+b]};a.sum=function(c){return c.reduce(function(b,c){return b+c})};a.dot=function(c,b){return a.mulMatrix(c,b)};
a.vectorLen=function(c){var b=c[0];c=c[1];return Math.sqrt(b*b+c*c)};a.divItems=function(c,b){return[c[0]/b,c[1]/b]};a.squareItems=function(c){var b=c[0];c=c[1];return[b*b,c*c]};a.normalize=function(c){return this.divItems(c,this.vectorLen(c))};return a}(),x=function(){function a(){v(this,a)}a.q=function(c,b){var a=1-b,k=d.mulItems(c[0],a*a*a),m=d.mulItems(c[1],3*a*a*b),a=d.mulItems(c[2],3*a*b*b),f=d.mulItems(c[3],b*b*b);return d.addArrays(d.addArrays(k,m),d.addArrays(a,f))};a.qprime=function(a,b){var c=
1-b,k=d.mulItems(d.subtract(a[1],a[0]),3*c*c),c=d.mulItems(d.subtract(a[2],a[1]),6*c*b),m=d.mulItems(d.subtract(a[3],a[2]),3*b*b);return d.addArrays(d.addArrays(k,c),m)};a.qprimeprime=function(a,b){return d.addArrays(d.mulItems(d.addArrays(d.subtract(a[2],d.mulItems(a[1],2)),a[0]),6*(1-b)),d.mulItems(d.addArrays(d.subtract(a[3],d.mulItems(a[2],2)),a[1]),6*b))};return a}();y.exports=function(a,c,b){if(!Array.isArray(a))throw new TypeError("First argument should be an array");a.forEach(function(a){if(!Array.isArray(a)||
2!==a.length||"number"!==typeof a[0]||"number"!==typeof a[1])throw Error("Each point should be an array of two numbers");});a=a.filter(function(b,c){return 0===c||!(b[0]===a[c-1][0]&&b[1]===a[c-1][1])});if(2>a.length)return[];var g=a.length,k=d.normalize(d.subtract(a[1],a[0])),g=d.normalize(d.subtract(a[g-2],a[g-1]));return w(a,k,g,c,b)}});
