(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){var fitCurve,svgPathProperties,round,sampleFunc,fit,toKeyframes,sampleSvg,searchSvgPath,fromSvg,stepFromSvg;fitCurve=require("fit-curve");svgPathProperties=require("svg-path-properties");round=function(n,d){var p,ret;d==null&&(d=5);p=Math.pow(10,d);ret=(Math.round(n*p)/p+"").split(".");return+(ret[0]+(ret[1]?"."+ret[1].substring(0,d):""))};sampleFunc=function(t){return Math.abs(Math.sin(Math.pow(3*t+1.77,2))/(Math.pow(3*t+2,5*t)+1))};fit=function(func,options){var ref$,ox,oy,dy,count,segments,i$,to$,x,y,points,segIdx,seg,cur,j$,step$,to1$,py,keyframes,len$,ps,curves,len1$,curve,x1,x2,y1,y2,ncurve,k$,j;options==null&&(options={});options=import$({precision:1e-4,sampleCount:5,errorThreshold:.1,start:0,end:1},options);ref$=[options.start,0,1,0,[]],ox=ref$[0],oy=ref$[1],dy=ref$[2],count=ref$[3],segments=ref$[4];for(i$=options.start,to$=options.end;i$<=to$;i$+=.001){x=i$;y=func(x);if(count>2&&Math.sign(y-oy)*Math.sign(dy)<0){segments.push([ox,x]);ox=x}dy=y-oy;oy=y;count=count+1}segments.push([ox,options.end]);points=[];for(i$=0,to$=segments.length;i$<to$;++i$){segIdx=i$;seg=segments[segIdx];cur=[];for(j$=seg[0],to1$=seg[1],step$=(seg[1]-seg[0])/options.sampleCount;step$<0?j$>to1$:j$<to1$;j$+=step$){x=j$;y=Math.round(func(x)*1e3)/1e3;cur.push([Math.round(1e3*x)*.001,Math.round(1e3*y)*.001])}y=Math.round(func(seg[1])*1e3)/1e3;cur.push([Math.round(1e3*seg[1])*.001,Math.round(1e3*y)*.001]);points.push(cur)}py=NaN;keyframes=[];for(i$=0,len$=points.length;i$<len$;++i$){ps=points[i$];curves=fitCurve(ps,options.errorThreshold);for(j$=0,len1$=curves.length;j$<len1$;++j$){curve=curves[j$];x1=curve[0][0];x2=curve[3][0];y1=curve[0][1];y2=curve[3][1];ncurve=[];if(Math.abs(y1-py)<.5*.01){continue}py=y1;for(k$=0;k$<4;++k$){j=k$;ncurve.push([Math.round((curve[j][0]-x1)/(x2-x1)/options.precision)*options.precision,Math.round((curve[j][1]-y1)/(y2-y1)/options.precision)*options.precision])}keyframes.push({percent:round(x1*100),value:y1,cubicBezier:[ncurve[1][0],ncurve[1][1],ncurve[2][0],ncurve[2][1]].map(fn$)})}}keyframes.push({percent:options.end*100,value:y2});return keyframes;function fn$(it){return round(it)}};toKeyframes=function(keyframes,options){var str,i$,to$,i,keyframe;options==null&&(options={});options=import$({propFunc:function(it){return['content: "'+it.value+'" ']},name:null,format:"stylus"},options||{});str=options.name?["@keyframes "+options.name]:[];if(options.format==="css"){str=str.concat("{");for(i$=0,to$=keyframes.length;i$<to$;++i$){i=i$;keyframe=keyframes[i];str=str.concat(["  "+keyframe.percent+"% {",keyframe.cubicBezier?"    animation-timing-function: cubic-bezier("+keyframe.cubicBezier.join(",")+");":void 8].filter(fn$).concat(options.propFunc(keyframe,i).map(fn1$)),["  }"])}str=str.concat("}");str=str.join("\n")}else{for(i$=0,to$=keyframes.length;i$<to$;++i$){i=i$;keyframe=keyframes[i];str=str.concat(["  "+keyframe.percent+"%",keyframe.cubicBezier?"    animation-timing-function: cubic-bezier("+keyframe.cubicBezier.join(",")+")":void 8].filter(fn2$).concat(options.propFunc(keyframe,i).map(fn3$)))}str=str.join("\n")}return str;function fn$(it){return it}function fn1$(it){return"    "+it+";"}function fn2$(it){return it}function fn3$(it){return"    "+it}};sampleSvg="M0,50c0,0,2,0.5,6.7,0c5.6-0.6,3.5-18.1,7.1-18.1s4.2,25.6,8.9,25.6s6.8-10.3,8.4-14c1.9-4.4,7.9-5.4,10.9,0.1C46.7,52.3,100,50,100,50";searchSvgPath=function(p,x,len,err,r,lv){var m,ptr;err==null&&(err=.01);r==null&&(r=[0,1]);lv==null&&(lv=20);m=(r[0]+r[1])*.5;ptr=p.getPointAtLength(m*len);ptr={x:ptr.x*.01,y:ptr.y*.01};if(Math.abs(ptr.x-x)<err||lv<=0){return(.5-ptr.y)*2}if(ptr.x>x){return searchSvgPath(p,x,len,err,[r[0],(r[0]+r[1])*.5],lv-1)}else if(ptr.x<x){return searchSvgPath(p,x,len,err,[(r[0]+r[1])*.5,r[1]],lv-1)}else{return(.5-ptr.y)*2}};fromSvg=function(pathd,options){var step;options==null&&(options={});step=stepFromSvg(pathd);return fit(function(it){return step(it)},options)};stepFromSvg=function(pathd){var p,len,step;p=svgPathProperties.svgPathProperties(pathd);len=p.getTotalLength();return step=function(t){return searchSvgPath(p,t,len,.001)}};module.exports={round:round,sampleFunc:sampleFunc,sampleSvg:sampleSvg,fit:fit,fromSvg:fromSvg,stepFromSvg:stepFromSvg,toKeyframes:toKeyframes};function import$(obj,src){var own={}.hasOwnProperty;for(var key in src)if(own.call(src,key))obj[key]=src[key];return obj}},{"fit-curve":2,"svg-path-properties":3}],2:[function(require,module,exports){(function(global,factory){if(typeof define==="function"&&define.amd){define(["module"],factory)}else if(typeof exports!=="undefined"){factory(module)}else{var mod={exports:{}};factory(mod);global.fitCurve=mod.exports}})(this,function(module){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function fitCurve(points,maxError,progressCallback){if(!Array.isArray(points)){throw new TypeError("First argument should be an array")}points.forEach(function(point){if(!Array.isArray(point)||point.length!==2||typeof point[0]!=="number"||typeof point[1]!=="number"){throw Error("Each point should be an array of two numbers")}});points=points.filter(function(point,i){return i===0||!(point[0]===points[i-1][0]&&point[1]===points[i-1][1])});if(points.length<2){return[]}var len=points.length;var leftTangent=createTangent(points[1],points[0]);var rightTangent=createTangent(points[len-2],points[len-1]);return fitCubic(points,leftTangent,rightTangent,maxError,progressCallback)}function fitCubic(points,leftTangent,rightTangent,error,progressCallback){var MaxIterations=20;var bezCurve,u,uPrime,maxError,prevErr,splitPoint,prevSplit,centerVector,toCenterTangent,fromCenterTangent,beziers,dist,i;if(points.length===2){dist=maths.vectorLen(maths.subtract(points[0],points[1]))/3;bezCurve=[points[0],maths.addArrays(points[0],maths.mulItems(leftTangent,dist)),maths.addArrays(points[1],maths.mulItems(rightTangent,dist)),points[1]];return[bezCurve]}u=chordLengthParameterize(points);var _generateAndReport=generateAndReport(points,u,u,leftTangent,rightTangent,progressCallback);bezCurve=_generateAndReport[0];maxError=_generateAndReport[1];splitPoint=_generateAndReport[2];if(maxError<error){return[bezCurve]}if(maxError<error*error){uPrime=u;prevErr=maxError;prevSplit=splitPoint;for(i=0;i<MaxIterations;i++){uPrime=reparameterize(bezCurve,points,uPrime);var _generateAndReport2=generateAndReport(points,u,uPrime,leftTangent,rightTangent,progressCallback);bezCurve=_generateAndReport2[0];maxError=_generateAndReport2[1];splitPoint=_generateAndReport2[2];if(maxError<error){return[bezCurve]}else if(splitPoint===prevSplit){var errChange=maxError/prevErr;if(errChange>.9999&&errChange<1.0001){break}}prevErr=maxError;prevSplit=splitPoint}}beziers=[];centerVector=maths.subtract(points[splitPoint-1],points[splitPoint+1]);if(centerVector[0]===0&&centerVector[1]===0){centerVector=maths.subtract(points[splitPoint-1],points[splitPoint]).reverse();centerVector[0]=-centerVector[0]}toCenterTangent=maths.normalize(centerVector);fromCenterTangent=maths.mulItems(toCenterTangent,-1);beziers=beziers.concat(fitCubic(points.slice(0,splitPoint+1),leftTangent,toCenterTangent,error,progressCallback));beziers=beziers.concat(fitCubic(points.slice(splitPoint),fromCenterTangent,rightTangent,error,progressCallback));return beziers}function generateAndReport(points,paramsOrig,paramsPrime,leftTangent,rightTangent,progressCallback){var bezCurve,maxError,splitPoint;bezCurve=generateBezier(points,paramsPrime,leftTangent,rightTangent,progressCallback);var _computeMaxError=computeMaxError(points,bezCurve,paramsOrig);maxError=_computeMaxError[0];splitPoint=_computeMaxError[1];if(progressCallback){progressCallback({bez:bezCurve,points:points,params:paramsOrig,maxErr:maxError,maxPoint:splitPoint})}return[bezCurve,maxError,splitPoint]}function generateBezier(points,parameters,leftTangent,rightTangent){var bezCurve,A,a,C,X,det_C0_C1,det_C0_X,det_X_C1,alpha_l,alpha_r,epsilon,segLength,i,len,tmp,u,ux,firstPoint=points[0],lastPoint=points[points.length-1];bezCurve=[firstPoint,null,null,lastPoint];A=maths.zeros_Xx2x2(parameters.length);for(i=0,len=parameters.length;i<len;i++){u=parameters[i];ux=1-u;a=A[i];a[0]=maths.mulItems(leftTangent,3*u*(ux*ux));a[1]=maths.mulItems(rightTangent,3*ux*(u*u))}C=[[0,0],[0,0]];X=[0,0];for(i=0,len=points.length;i<len;i++){u=parameters[i];a=A[i];C[0][0]+=maths.dot(a[0],a[0]);C[0][1]+=maths.dot(a[0],a[1]);C[1][0]+=maths.dot(a[0],a[1]);C[1][1]+=maths.dot(a[1],a[1]);tmp=maths.subtract(points[i],bezier.q([firstPoint,firstPoint,lastPoint,lastPoint],u));X[0]+=maths.dot(a[0],tmp);X[1]+=maths.dot(a[1],tmp)}det_C0_C1=C[0][0]*C[1][1]-C[1][0]*C[0][1];det_C0_X=C[0][0]*X[1]-C[1][0]*X[0];det_X_C1=X[0]*C[1][1]-X[1]*C[0][1];alpha_l=det_C0_C1===0?0:det_X_C1/det_C0_C1;alpha_r=det_C0_C1===0?0:det_C0_X/det_C0_C1;segLength=maths.vectorLen(maths.subtract(firstPoint,lastPoint));epsilon=1e-6*segLength;if(alpha_l<epsilon||alpha_r<epsilon){bezCurve[1]=maths.addArrays(firstPoint,maths.mulItems(leftTangent,segLength/3));bezCurve[2]=maths.addArrays(lastPoint,maths.mulItems(rightTangent,segLength/3))}else{bezCurve[1]=maths.addArrays(firstPoint,maths.mulItems(leftTangent,alpha_l));bezCurve[2]=maths.addArrays(lastPoint,maths.mulItems(rightTangent,alpha_r))}return bezCurve}function reparameterize(bezier,points,parameters){return parameters.map(function(p,i){return newtonRaphsonRootFind(bezier,points[i],p)})}function newtonRaphsonRootFind(bez,point,u){var d=maths.subtract(bezier.q(bez,u),point),qprime=bezier.qprime(bez,u),numerator=maths.mulMatrix(d,qprime),denominator=maths.sum(maths.addItems(maths.squareItems(qprime),maths.mulMatrix(d,bezier.qprimeprime(bez,u))));if(denominator===0){return u}else{return u-numerator/denominator}}function chordLengthParameterize(points){var u=[],currU,prevU,prevP;points.forEach(function(p,i){currU=i?prevU+maths.vectorLen(maths.subtract(p,prevP)):0;u.push(currU);prevU=currU;prevP=p});u=u.map(function(x){return x/prevU});return u}function computeMaxError(points,bez,parameters){var dist,maxDist,splitPoint,v,i,count,point,t;maxDist=0;splitPoint=points.length/2;var t_distMap=mapTtoRelativeDistances(bez,10);for(i=0,count=points.length;i<count;i++){point=points[i];t=find_t(bez,parameters[i],t_distMap,10);v=maths.subtract(bezier.q(bez,t),point);dist=v[0]*v[0]+v[1]*v[1];if(dist>maxDist){maxDist=dist;splitPoint=i}}return[maxDist,splitPoint]}var mapTtoRelativeDistances=function mapTtoRelativeDistances(bez,B_parts){var B_t_curr;var B_t_dist=[0];var B_t_prev=bez[0];var sumLen=0;for(var i=1;i<=B_parts;i++){B_t_curr=bezier.q(bez,i/B_parts);sumLen+=maths.vectorLen(maths.subtract(B_t_curr,B_t_prev));B_t_dist.push(sumLen);B_t_prev=B_t_curr}B_t_dist=B_t_dist.map(function(x){return x/sumLen});return B_t_dist};function find_t(bez,param,t_distMap,B_parts){if(param<0){return 0}if(param>1){return 1}var lenMax,lenMin,tMax,tMin,t;for(var i=1;i<=B_parts;i++){if(param<=t_distMap[i]){tMin=(i-1)/B_parts;tMax=i/B_parts;lenMin=t_distMap[i-1];lenMax=t_distMap[i];t=(param-lenMin)/(lenMax-lenMin)*(tMax-tMin)+tMin;break}}return t}function createTangent(pointA,pointB){return maths.normalize(maths.subtract(pointA,pointB))}var maths=function(){function maths(){_classCallCheck(this,maths)}maths.zeros_Xx2x2=function zeros_Xx2x2(x){var zs=[];while(x--){zs.push([0,0])}return zs};maths.mulItems=function mulItems(items,multiplier){return[items[0]*multiplier,items[1]*multiplier]};maths.mulMatrix=function mulMatrix(m1,m2){return m1[0]*m2[0]+m1[1]*m2[1]};maths.subtract=function subtract(arr1,arr2){return[arr1[0]-arr2[0],arr1[1]-arr2[1]]};maths.addArrays=function addArrays(arr1,arr2){return[arr1[0]+arr2[0],arr1[1]+arr2[1]]};maths.addItems=function addItems(items,addition){return[items[0]+addition,items[1]+addition]};maths.sum=function sum(items){return items.reduce(function(sum,x){return sum+x})};maths.dot=function dot(m1,m2){return maths.mulMatrix(m1,m2)};maths.vectorLen=function vectorLen(v){var a=v[0],b=v[1];return Math.sqrt(a*a+b*b)};maths.divItems=function divItems(items,divisor){return[items[0]/divisor,items[1]/divisor]};maths.squareItems=function squareItems(items){var a=items[0],b=items[1];return[a*a,b*b]};maths.normalize=function normalize(v){return this.divItems(v,this.vectorLen(v))};return maths}();var bezier=function(){function bezier(){_classCallCheck(this,bezier)}bezier.q=function q(ctrlPoly,t){var tx=1-t;var pA=maths.mulItems(ctrlPoly[0],tx*tx*tx),pB=maths.mulItems(ctrlPoly[1],3*tx*tx*t),pC=maths.mulItems(ctrlPoly[2],3*tx*t*t),pD=maths.mulItems(ctrlPoly[3],t*t*t);return maths.addArrays(maths.addArrays(pA,pB),maths.addArrays(pC,pD))};bezier.qprime=function qprime(ctrlPoly,t){var tx=1-t;var pA=maths.mulItems(maths.subtract(ctrlPoly[1],ctrlPoly[0]),3*tx*tx),pB=maths.mulItems(maths.subtract(ctrlPoly[2],ctrlPoly[1]),6*tx*t),pC=maths.mulItems(maths.subtract(ctrlPoly[3],ctrlPoly[2]),3*t*t);return maths.addArrays(maths.addArrays(pA,pB),pC)};bezier.qprimeprime=function qprimeprime(ctrlPoly,t){return maths.addArrays(maths.mulItems(maths.addArrays(maths.subtract(ctrlPoly[2],maths.mulItems(ctrlPoly[1],2)),ctrlPoly[0]),6*(1-t)),maths.mulItems(maths.addArrays(maths.subtract(ctrlPoly[3],maths.mulItems(ctrlPoly[2],2)),ctrlPoly[1]),6*t))};return bezier}();module.exports=fitCurve})},{}],3:[function(require,module,exports){(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?factory(exports):typeof define==="function"&&define.amd?define(["exports"],factory):factory(global.spp={})})(this,function(exports){"use strict";var length={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0};var segment=/([astvzqmhlc])([^astvzqmhlc]*)/gi;function parse(path){var data=[];path.replace(segment,function(_,command,args){var type=command.toLowerCase();args=parseValues(args);if(type==="m"&&args.length>2){data.push([command].concat(args.splice(0,2)));type="l";command=command==="m"?"l":"L"}while(args.length>=0){if(args.length===length[type]){args.unshift(command);return data.push(args)}if(args.length<length[type]){throw new Error("malformed path data")}data.push([command].concat(args.splice(0,length[type])))}});return data}var number=/-?[0-9]*\.?[0-9]+(?:e[-+]?\d+)?/gi;function parseValues(args){var numbers=args.match(number);return numbers?numbers.map(Number):[]}function Bezier(ax,ay,bx,by,cx,cy,dx,dy){return new Bezier$1(ax,ay,bx,by,cx,cy,dx,dy)}function Bezier$1(ax,ay,bx,by,cx,cy,dx,dy){this.a={x:ax,y:ay};this.b={x:bx,y:by};this.c={x:cx,y:cy};this.d={x:dx,y:dy};if(dx!==null&&dx!==undefined&&dy!==null&&dy!==undefined){this.getArcLength=getCubicArcLength;this.getPoint=cubicPoint;this.getDerivative=cubicDerivative}else{this.getArcLength=getQuadraticArcLength;this.getPoint=quadraticPoint;this.getDerivative=quadraticDerivative}this.init()}Bezier$1.prototype={constructor:Bezier$1,init:function(){this.length=this.getArcLength([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y])},getTotalLength:function(){return this.length},getPointAtLength:function(length){var t=t2length(length,this.length,this.getArcLength,[this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y]);return this.getPoint([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y],t)},getTangentAtLength:function(length){var t=t2length(length,this.length,this.getArcLength,[this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y]);var derivative=this.getDerivative([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y],t);var mdl=Math.sqrt(derivative.x*derivative.x+derivative.y*derivative.y);var tangent;if(mdl>0){tangent={x:derivative.x/mdl,y:derivative.y/mdl}}else{tangent={x:0,y:0}}return tangent},getPropertiesAtLength:function(length){var t=t2length(length,this.length,this.getArcLength,[this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y]);var derivative=this.getDerivative([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y],t);var mdl=Math.sqrt(derivative.x*derivative.x+derivative.y*derivative.y);var tangent;if(mdl>0){tangent={x:derivative.x/mdl,y:derivative.y/mdl}}else{tangent={x:0,y:0}}var point=this.getPoint([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y],t);return{x:point.x,y:point.y,tangentX:tangent.x,tangentY:tangent.y}}};function quadraticDerivative(xs,ys,t){return{x:(1-t)*2*(xs[1]-xs[0])+t*2*(xs[2]-xs[1]),y:(1-t)*2*(ys[1]-ys[0])+t*2*(ys[2]-ys[1])}}function cubicDerivative(xs,ys,t){var derivative=quadraticPoint([3*(xs[1]-xs[0]),3*(xs[2]-xs[1]),3*(xs[3]-xs[2])],[3*(ys[1]-ys[0]),3*(ys[2]-ys[1]),3*(ys[3]-ys[2])],t);return derivative}function t2length(length,total_length,func,xs,ys){var error=1;var t=length/total_length;var step=(length-func(xs,ys,t))/total_length;while(error>.001){var increasedTLength=func(xs,ys,t+step);var decreasedTLength=func(xs,ys,t-step);var increasedTError=Math.abs(length-increasedTLength)/total_length;var decreasedTError=Math.abs(length-decreasedTLength)/total_length;if(increasedTError<error){error=increasedTError;t+=step}else if(decreasedTError<error){error=decreasedTError;t-=step}else{step/=2}}return t}function quadraticPoint(xs,ys,t){var x=(1-t)*(1-t)*xs[0]+2*(1-t)*t*xs[1]+t*t*xs[2];var y=(1-t)*(1-t)*ys[0]+2*(1-t)*t*ys[1]+t*t*ys[2];return{x:x,y:y}}function cubicPoint(xs,ys,t){var x=(1-t)*(1-t)*(1-t)*xs[0]+3*(1-t)*(1-t)*t*xs[1]+3*(1-t)*t*t*xs[2]+t*t*t*xs[3];var y=(1-t)*(1-t)*(1-t)*ys[0]+3*(1-t)*(1-t)*t*ys[1]+3*(1-t)*t*t*ys[2]+t*t*t*ys[3];return{x:x,y:y}}function getQuadraticArcLength(xs,ys,t){if(t===undefined){t=1}var ax=xs[0]-2*xs[1]+xs[2];var ay=ys[0]-2*ys[1]+ys[2];var bx=2*xs[1]-2*xs[0];var by=2*ys[1]-2*ys[0];var A=4*(ax*ax+ay*ay);var B=4*(ax*bx+ay*by);var C=bx*bx+by*by;if(A===0){return t*Math.sqrt(Math.pow(xs[2]-xs[0],2)+Math.pow(ys[2]-ys[0],2))}var b=B/(2*A);var c=C/A;var u=t+b;var k=c-b*b;var uuk=u*u+k>0?Math.sqrt(u*u+k):0;var bbk=b*b+k>0?Math.sqrt(b*b+k):0;var term=b+Math.sqrt(b*b+k)!==0?k*Math.log(Math.abs((u+uuk)/(b+bbk))):0;return Math.sqrt(A)/2*(u*uuk-b*bbk+term)}var tValues=[[],[],[-.5773502691896257,.5773502691896257],[0,-.7745966692414834,.7745966692414834],[-.33998104358485626,.33998104358485626,-.8611363115940526,.8611363115940526],[0,-.5384693101056831,.5384693101056831,-.906179845938664,.906179845938664],[.6612093864662645,-.6612093864662645,-.2386191860831969,.2386191860831969,-.932469514203152,.932469514203152],[0,.4058451513773972,-.4058451513773972,-.7415311855993945,.7415311855993945,-.9491079123427585,.9491079123427585],[-.1834346424956498,.1834346424956498,-.525532409916329,.525532409916329,-.7966664774136267,.7966664774136267,-.9602898564975363,.9602898564975363],[0,-.8360311073266358,.8360311073266358,-.9681602395076261,.9681602395076261,-.3242534234038089,.3242534234038089,-.6133714327005904,.6133714327005904],[-.14887433898163122,.14887433898163122,-.4333953941292472,.4333953941292472,-.6794095682990244,.6794095682990244,-.8650633666889845,.8650633666889845,-.9739065285171717,.9739065285171717],[0,-.26954315595234496,.26954315595234496,-.5190961292068118,.5190961292068118,-.7301520055740494,.7301520055740494,-.8870625997680953,.8870625997680953,-.978228658146057,.978228658146057],[-.1252334085114689,.1252334085114689,-.3678314989981802,.3678314989981802,-.5873179542866175,.5873179542866175,-.7699026741943047,.7699026741943047,-.9041172563704749,.9041172563704749,-.9815606342467192,.9815606342467192],[0,-.2304583159551348,.2304583159551348,-.44849275103644687,.44849275103644687,-.6423493394403402,.6423493394403402,-.8015780907333099,.8015780907333099,-.9175983992229779,.9175983992229779,-.9841830547185881,.9841830547185881],[-.10805494870734367,.10805494870734367,-.31911236892788974,.31911236892788974,-.5152486363581541,.5152486363581541,-.6872929048116855,.6872929048116855,-.827201315069765,.827201315069765,-.9284348836635735,.9284348836635735,-.9862838086968123,.9862838086968123],[0,-.20119409399743451,.20119409399743451,-.3941513470775634,.3941513470775634,-.5709721726085388,.5709721726085388,-.7244177313601701,.7244177313601701,-.8482065834104272,.8482065834104272,-.937273392400706,.937273392400706,-.9879925180204854,.9879925180204854],[-.09501250983763744,.09501250983763744,-.2816035507792589,.2816035507792589,-.45801677765722737,.45801677765722737,-.6178762444026438,.6178762444026438,-.755404408355003,.755404408355003,-.8656312023878318,.8656312023878318,-.9445750230732326,.9445750230732326,-.9894009349916499,.9894009349916499],[0,-.17848418149584785,.17848418149584785,-.3512317634538763,.3512317634538763,-.5126905370864769,.5126905370864769,-.6576711592166907,.6576711592166907,-.7815140038968014,.7815140038968014,-.8802391537269859,.8802391537269859,-.9506755217687678,.9506755217687678,-.9905754753144174,.9905754753144174],[-.0847750130417353,.0847750130417353,-.2518862256915055,.2518862256915055,-.41175116146284263,.41175116146284263,-.5597708310739475,.5597708310739475,-.6916870430603532,.6916870430603532,-.8037049589725231,.8037049589725231,-.8926024664975557,.8926024664975557,-.9558239495713977,.9558239495713977,-.9915651684209309,.9915651684209309],[0,-.16035864564022537,.16035864564022537,-.31656409996362983,.31656409996362983,-.46457074137596094,.46457074137596094,-.600545304661681,.600545304661681,-.7209661773352294,.7209661773352294,-.8227146565371428,.8227146565371428,-.9031559036148179,.9031559036148179,-.96020815213483,.96020815213483,-.9924068438435844,.9924068438435844],[-.07652652113349734,.07652652113349734,-.22778585114164507,.22778585114164507,-.37370608871541955,.37370608871541955,-.5108670019508271,.5108670019508271,-.636053680726515,.636053680726515,-.7463319064601508,.7463319064601508,-.8391169718222188,.8391169718222188,-.912234428251326,.912234428251326,-.9639719272779138,.9639719272779138,-.9931285991850949,.9931285991850949],[0,-.1455618541608951,.1455618541608951,-.2880213168024011,.2880213168024011,-.4243421202074388,.4243421202074388,-.5516188358872198,.5516188358872198,-.6671388041974123,.6671388041974123,-.7684399634756779,.7684399634756779,-.8533633645833173,.8533633645833173,-.9200993341504008,.9200993341504008,-.9672268385663063,.9672268385663063,-.9937521706203895,.9937521706203895],[-.06973927331972223,.06973927331972223,-.20786042668822127,.20786042668822127,-.34193582089208424,.34193582089208424,-.469355837986757,.469355837986757,-.5876404035069116,.5876404035069116,-.6944872631866827,.6944872631866827,-.7878168059792081,.7878168059792081,-.8658125777203002,.8658125777203002,-.926956772187174,.926956772187174,-.9700604978354287,.9700604978354287,-.9942945854823992,.9942945854823992],[0,-.1332568242984661,.1332568242984661,-.26413568097034495,.26413568097034495,-.3903010380302908,.3903010380302908,-.5095014778460075,.5095014778460075,-.6196098757636461,.6196098757636461,-.7186613631319502,.7186613631319502,-.8048884016188399,.8048884016188399,-.8767523582704416,.8767523582704416,-.9329710868260161,.9329710868260161,-.9725424712181152,.9725424712181152,-.9947693349975522,.9947693349975522],[-.06405689286260563,.06405689286260563,-.1911188674736163,.1911188674736163,-.3150426796961634,.3150426796961634,-.4337935076260451,.4337935076260451,-.5454214713888396,.5454214713888396,-.6480936519369755,.6480936519369755,-.7401241915785544,.7401241915785544,-.820001985973903,.820001985973903,-.8864155270044011,.8864155270044011,-.9382745520027328,.9382745520027328,-.9747285559713095,.9747285559713095,-.9951872199970213,.9951872199970213]];var cValues=[[],[],[1,1],[.8888888888888888,.5555555555555556,.5555555555555556],[.6521451548625461,.6521451548625461,.34785484513745385,.34785484513745385],[.5688888888888889,.47862867049936647,.47862867049936647,.23692688505618908,.23692688505618908],[.3607615730481386,.3607615730481386,.46791393457269104,.46791393457269104,.17132449237917036,.17132449237917036],[.4179591836734694,.3818300505051189,.3818300505051189,.27970539148927664,.27970539148927664,.1294849661688697,.1294849661688697],[.362683783378362,.362683783378362,.31370664587788727,.31370664587788727,.22238103445337448,.22238103445337448,.10122853629037626,.10122853629037626],[.3302393550012598,.1806481606948574,.1806481606948574,.08127438836157441,.08127438836157441,.31234707704000286,.31234707704000286,.26061069640293544,.26061069640293544],[.29552422471475287,.29552422471475287,.26926671930999635,.26926671930999635,.21908636251598204,.21908636251598204,.1494513491505806,.1494513491505806,.06667134430868814,.06667134430868814],[.2729250867779006,.26280454451024665,.26280454451024665,.23319376459199048,.23319376459199048,.18629021092773426,.18629021092773426,.1255803694649046,.1255803694649046,.05566856711617366,.05566856711617366],[.24914704581340277,.24914704581340277,.2334925365383548,.2334925365383548,.20316742672306592,.20316742672306592,.16007832854334622,.16007832854334622,.10693932599531843,.10693932599531843,.04717533638651183,.04717533638651183],[.2325515532308739,.22628318026289723,.22628318026289723,.2078160475368885,.2078160475368885,.17814598076194574,.17814598076194574,.13887351021978725,.13887351021978725,.09212149983772845,.09212149983772845,.04048400476531588,.04048400476531588],[.2152638534631578,.2152638534631578,.2051984637212956,.2051984637212956,.18553839747793782,.18553839747793782,.15720316715819355,.15720316715819355,.12151857068790319,.12151857068790319,.08015808715976021,.08015808715976021,.03511946033175186,.03511946033175186],[.2025782419255613,.19843148532711158,.19843148532711158,.1861610000155622,.1861610000155622,.16626920581699392,.16626920581699392,.13957067792615432,.13957067792615432,.10715922046717194,.10715922046717194,.07036604748810812,.07036604748810812,.03075324199611727,.03075324199611727],[.1894506104550685,.1894506104550685,.18260341504492358,.18260341504492358,.16915651939500254,.16915651939500254,.14959598881657674,.14959598881657674,.12462897125553388,.12462897125553388,.09515851168249279,.09515851168249279,.062253523938647894,.062253523938647894,.027152459411754096,.027152459411754096],[.17944647035620653,.17656270536699264,.17656270536699264,.16800410215645004,.16800410215645004,.15404576107681028,.15404576107681028,.13513636846852548,.13513636846852548,.11188384719340397,.11188384719340397,.08503614831717918,.08503614831717918,.0554595293739872,.0554595293739872,.02414830286854793,.02414830286854793],[.1691423829631436,.1691423829631436,.16427648374583273,.16427648374583273,.15468467512626524,.15468467512626524,.14064291467065065,.14064291467065065,.12255520671147846,.12255520671147846,.10094204410628717,.10094204410628717,.07642573025488905,.07642573025488905,.0497145488949698,.0497145488949698,.02161601352648331,.02161601352648331],[.1610544498487837,.15896884339395434,.15896884339395434,.15276604206585967,.15276604206585967,.1426067021736066,.1426067021736066,.12875396253933621,.12875396253933621,.11156664554733399,.11156664554733399,.09149002162245,.09149002162245,.06904454273764123,.06904454273764123,.0448142267656996,.0448142267656996,.019461788229726478,.019461788229726478],[.15275338713072584,.15275338713072584,.14917298647260374,.14917298647260374,.14209610931838204,.14209610931838204,.13168863844917664,.13168863844917664,.11819453196151841,.11819453196151841,.10193011981724044,.10193011981724044,.08327674157670475,.08327674157670475,.06267204833410907,.06267204833410907,.04060142980038694,.04060142980038694,.017614007139152118,.017614007139152118],[.14608113364969041,.14452440398997005,.14452440398997005,.13988739479107315,.13988739479107315,.13226893863333747,.13226893863333747,.12183141605372853,.12183141605372853,.10879729916714838,.10879729916714838,.09344442345603386,.09344442345603386,.0761001136283793,.0761001136283793,.057134425426857205,.057134425426857205,.036953789770852494,.036953789770852494,.016017228257774335,.016017228257774335],[.13925187285563198,.13925187285563198,.13654149834601517,.13654149834601517,.13117350478706238,.13117350478706238,.12325237681051242,.12325237681051242,.11293229608053922,.11293229608053922,.10041414444288096,.10041414444288096,.08594160621706773,.08594160621706773,.06979646842452049,.06979646842452049,.052293335152683286,.052293335152683286,.03377490158481415,.03377490158481415,.0146279952982722,.0146279952982722],[.13365457218610619,.1324620394046966,.1324620394046966,.12890572218808216,.12890572218808216,.12304908430672953,.12304908430672953,.11499664022241136,.11499664022241136,.10489209146454141,.10489209146454141,.09291576606003515,.09291576606003515,.07928141177671895,.07928141177671895,.06423242140852585,.06423242140852585,.04803767173108467,.04803767173108467,.030988005856979445,.030988005856979445,.013411859487141771,.013411859487141771],[.12793819534675216,.12793819534675216,.1258374563468283,.1258374563468283,.12167047292780339,.12167047292780339,.1155056680537256,.1155056680537256,.10744427011596563,.10744427011596563,.09761865210411388,.09761865210411388,.08619016153195327,.08619016153195327,.0733464814110803,.0733464814110803,.05929858491543678,.05929858491543678,.04427743881741981,.04427743881741981,.028531388628933663,.028531388628933663,.0123412297999872,.0123412297999872]];var binomialCoefficients=[[1],[1,1],[1,2,1],[1,3,3,1]];function binomials(n,k){return binomialCoefficients[n][k]}function getDerivative(derivative,t,vs){var n=vs.length-1,_vs,value,k;if(n===0){return 0}if(derivative===0){value=0;for(k=0;k<=n;k++){value+=binomials(n,k)*Math.pow(1-t,n-k)*Math.pow(t,k)*vs[k]}return value}else{_vs=new Array(n);for(k=0;k<n;k++){_vs[k]=n*(vs[k+1]-vs[k])}return getDerivative(derivative-1,t,_vs)}}function B(xs,ys,t){var xbase=getDerivative(1,t,xs);var ybase=getDerivative(1,t,ys);var combined=xbase*xbase+ybase*ybase;return Math.sqrt(combined)}function getCubicArcLength(xs,ys,t){var z,sum,i,correctedT;if(t===undefined){t=1}var n=20;z=t/2;sum=0;for(i=0;i<n;i++){correctedT=z*tValues[n][i]+z;sum+=cValues[n][i]*B(xs,ys,correctedT)}return z*sum}function Arc(x0,y0,rx,ry,xAxisRotate,LargeArcFlag,SweepFlag,x,y){return new Arc$1(x0,y0,rx,ry,xAxisRotate,LargeArcFlag,SweepFlag,x,y)}function Arc$1(x0,y0,rx,ry,xAxisRotate,LargeArcFlag,SweepFlag,x1,y1){this.x0=x0;this.y0=y0;this.rx=rx;this.ry=ry;this.xAxisRotate=xAxisRotate;this.LargeArcFlag=LargeArcFlag;this.SweepFlag=SweepFlag;this.x1=x1;this.y1=y1;var lengthProperties=approximateArcLengthOfCurve(300,function(t){return pointOnEllipticalArc({x:x0,y:y0},rx,ry,xAxisRotate,LargeArcFlag,SweepFlag,{x:x1,y:y1},t)});this.length=lengthProperties.arcLength}Arc$1.prototype={constructor:Arc$1,init:function(){},getTotalLength:function(){return this.length},getPointAtLength:function(fractionLength){if(fractionLength<0){fractionLength=0}else if(fractionLength>this.length){fractionLength=this.length}var position=pointOnEllipticalArc({x:this.x0,y:this.y0},this.rx,this.ry,this.xAxisRotate,this.LargeArcFlag,this.SweepFlag,{x:this.x1,y:this.y1},fractionLength/this.length);return{x:position.x,y:position.y}},getTangentAtLength:function(fractionLength){if(fractionLength<0){fractionLength=0}else if(fractionLength>this.length){fractionLength=this.length}var position=pointOnEllipticalArc({x:this.x0,y:this.y0},this.rx,this.ry,this.xAxisRotate,this.LargeArcFlag,this.SweepFlag,{x:this.x1,y:this.y1},fractionLength/this.length);return{x:position.x,y:position.y}},getPropertiesAtLength:function(fractionLength){var tangent=this.getTangentAtLength(fractionLength);var point=this.getPointAtLength(fractionLength);return{x:point.x,y:point.y,tangentX:tangent.x,tangentY:tangent.y}}};function pointOnEllipticalArc(p0,rx,ry,xAxisRotation,largeArcFlag,sweepFlag,p1,t){rx=Math.abs(rx);ry=Math.abs(ry);xAxisRotation=mod(xAxisRotation,360);var xAxisRotationRadians=toRadians(xAxisRotation);if(p0.x===p1.x&&p0.y===p1.y){return p0}if(rx===0||ry===0){return this.pointOnLine(p0,p1,t)}var dx=(p0.x-p1.x)/2;var dy=(p0.y-p1.y)/2;var transformedPoint={x:Math.cos(xAxisRotationRadians)*dx+Math.sin(xAxisRotationRadians)*dy,y:-Math.sin(xAxisRotationRadians)*dx+Math.cos(xAxisRotationRadians)*dy};var radiiCheck=Math.pow(transformedPoint.x,2)/Math.pow(rx,2)+Math.pow(transformedPoint.y,2)/Math.pow(ry,2);if(radiiCheck>1){rx=Math.sqrt(radiiCheck)*rx;ry=Math.sqrt(radiiCheck)*ry}var cSquareNumerator=Math.pow(rx,2)*Math.pow(ry,2)-Math.pow(rx,2)*Math.pow(transformedPoint.y,2)-Math.pow(ry,2)*Math.pow(transformedPoint.x,2);var cSquareRootDenom=Math.pow(rx,2)*Math.pow(transformedPoint.y,2)+Math.pow(ry,2)*Math.pow(transformedPoint.x,2);var cRadicand=cSquareNumerator/cSquareRootDenom;cRadicand=cRadicand<0?0:cRadicand;var cCoef=(largeArcFlag!==sweepFlag?1:-1)*Math.sqrt(cRadicand);var transformedCenter={x:cCoef*(rx*transformedPoint.y/ry),y:cCoef*(-(ry*transformedPoint.x)/rx)};var center={x:Math.cos(xAxisRotationRadians)*transformedCenter.x-Math.sin(xAxisRotationRadians)*transformedCenter.y+(p0.x+p1.x)/2,y:Math.sin(xAxisRotationRadians)*transformedCenter.x+Math.cos(xAxisRotationRadians)*transformedCenter.y+(p0.y+p1.y)/2};var startVector={x:(transformedPoint.x-transformedCenter.x)/rx,y:(transformedPoint.y-transformedCenter.y)/ry};var startAngle=angleBetween({x:1,y:0},startVector);var endVector={x:(-transformedPoint.x-transformedCenter.x)/rx,y:(-transformedPoint.y-transformedCenter.y)/ry};var sweepAngle=angleBetween(startVector,endVector);if(!sweepFlag&&sweepAngle>0){sweepAngle-=2*Math.PI}else if(sweepFlag&&sweepAngle<0){sweepAngle+=2*Math.PI}sweepAngle%=2*Math.PI;var angle=startAngle+sweepAngle*t;var ellipseComponentX=rx*Math.cos(angle);var ellipseComponentY=ry*Math.sin(angle);var point={x:Math.cos(xAxisRotationRadians)*ellipseComponentX-Math.sin(xAxisRotationRadians)*ellipseComponentY+center.x,y:Math.sin(xAxisRotationRadians)*ellipseComponentX+Math.cos(xAxisRotationRadians)*ellipseComponentY+center.y};point.ellipticalArcStartAngle=startAngle;point.ellipticalArcEndAngle=startAngle+sweepAngle;point.ellipticalArcAngle=angle;point.ellipticalArcCenter=center;point.resultantRx=rx;point.resultantRy=ry;return point}function approximateArcLengthOfCurve(resolution,pointOnCurveFunc){resolution=resolution?resolution:500;var resultantArcLength=0;var arcLengthMap=[];var approximationLines=[];var prevPoint=pointOnCurveFunc(0);var nextPoint;for(var i=0;i<resolution;i++){var t=clamp(i*(1/resolution),0,1);nextPoint=pointOnCurveFunc(t);resultantArcLength+=distance(prevPoint,nextPoint);approximationLines.push([prevPoint,nextPoint]);arcLengthMap.push({t:t,arcLength:resultantArcLength});prevPoint=nextPoint}nextPoint=pointOnCurveFunc(1);approximationLines.push([prevPoint,nextPoint]);resultantArcLength+=distance(prevPoint,nextPoint);arcLengthMap.push({t:1,arcLength:resultantArcLength});return{arcLength:resultantArcLength,arcLengthMap:arcLengthMap,approximationLines:approximationLines}}function mod(x,m){return(x%m+m)%m}function toRadians(angle){return angle*(Math.PI/180)}function distance(p0,p1){return Math.sqrt(Math.pow(p1.x-p0.x,2)+Math.pow(p1.y-p0.y,2))}function clamp(val,min,max){return Math.min(Math.max(val,min),max)}function angleBetween(v0,v1){var p=v0.x*v1.x+v0.y*v1.y;var n=Math.sqrt((Math.pow(v0.x,2)+Math.pow(v0.y,2))*(Math.pow(v1.x,2)+Math.pow(v1.y,2)));var sign=v0.x*v1.y-v0.y*v1.x<0?-1:1;var angle=sign*Math.acos(p/n);return angle}function LinearPosition(x0,x1,y0,y1){return new LinearPosition$1(x0,x1,y0,y1)}function LinearPosition$1(x0,x1,y0,y1){this.x0=x0;this.x1=x1;this.y0=y0;this.y1=y1}LinearPosition$1.prototype.getTotalLength=function(){return Math.sqrt(Math.pow(this.x0-this.x1,2)+Math.pow(this.y0-this.y1,2))};LinearPosition$1.prototype.getPointAtLength=function(pos){var fraction=pos/Math.sqrt(Math.pow(this.x0-this.x1,2)+Math.pow(this.y0-this.y1,2));var newDeltaX=(this.x1-this.x0)*fraction;var newDeltaY=(this.y1-this.y0)*fraction;return{x:this.x0+newDeltaX,y:this.y0+newDeltaY}};LinearPosition$1.prototype.getTangentAtLength=function(){var module=Math.sqrt((this.x1-this.x0)*(this.x1-this.x0)+(this.y1-this.y0)*(this.y1-this.y0));return{x:(this.x1-this.x0)/module,y:(this.y1-this.y0)/module}};LinearPosition$1.prototype.getPropertiesAtLength=function(pos){var point=this.getPointAtLength(pos);var tangent=this.getTangentAtLength();return{x:point.x,y:point.y,tangentX:tangent.x,tangentY:tangent.y}};function pathProperties(svgString){var length=0;var partial_lengths=[];var functions=[];function svgProperties(string){if(!string){return null}var parsed=parse(string);var cur=[0,0];var prev_point=[0,0];var curve;var ringStart;for(var i=0;i<parsed.length;i++){if(parsed[i][0]==="M"){cur=[parsed[i][1],parsed[i][2]];ringStart=[cur[0],cur[1]];functions.push(null)}else if(parsed[i][0]==="m"){cur=[parsed[i][1]+cur[0],parsed[i][2]+cur[1]];ringStart=[cur[0],cur[1]];functions.push(null)}else if(parsed[i][0]==="L"){length=length+Math.sqrt(Math.pow(cur[0]-parsed[i][1],2)+Math.pow(cur[1]-parsed[i][2],2));functions.push(new LinearPosition(cur[0],parsed[i][1],cur[1],parsed[i][2]));cur=[parsed[i][1],parsed[i][2]]}else if(parsed[i][0]==="l"){length=length+Math.sqrt(Math.pow(parsed[i][1],2)+Math.pow(parsed[i][2],2));functions.push(new LinearPosition(cur[0],parsed[i][1]+cur[0],cur[1],parsed[i][2]+cur[1]));cur=[parsed[i][1]+cur[0],parsed[i][2]+cur[1]]}else if(parsed[i][0]==="H"){length=length+Math.abs(cur[0]-parsed[i][1]);functions.push(new LinearPosition(cur[0],parsed[i][1],cur[1],cur[1]));cur[0]=parsed[i][1]}else if(parsed[i][0]==="h"){length=length+Math.abs(parsed[i][1]);functions.push(new LinearPosition(cur[0],cur[0]+parsed[i][1],cur[1],cur[1]));cur[0]=parsed[i][1]+cur[0]}else if(parsed[i][0]==="V"){length=length+Math.abs(cur[1]-parsed[i][1]);functions.push(new LinearPosition(cur[0],cur[0],cur[1],parsed[i][1]));cur[1]=parsed[i][1]}else if(parsed[i][0]==="v"){length=length+Math.abs(parsed[i][1]);functions.push(new LinearPosition(cur[0],cur[0],cur[1],cur[1]+parsed[i][1]));cur[1]=parsed[i][1]+cur[1]}else if(parsed[i][0]==="z"||parsed[i][0]==="Z"){length=length+Math.sqrt(Math.pow(ringStart[0]-cur[0],2)+Math.pow(ringStart[1]-cur[1],2));functions.push(new LinearPosition(cur[0],ringStart[0],cur[1],ringStart[1]));cur=[ringStart[0],ringStart[1]]}else if(parsed[i][0]==="C"){curve=new Bezier(cur[0],cur[1],parsed[i][1],parsed[i][2],parsed[i][3],parsed[i][4],parsed[i][5],parsed[i][6]);length=length+curve.getTotalLength();cur=[parsed[i][5],parsed[i][6]];functions.push(curve)}else if(parsed[i][0]==="c"){curve=new Bezier(cur[0],cur[1],cur[0]+parsed[i][1],cur[1]+parsed[i][2],cur[0]+parsed[i][3],cur[1]+parsed[i][4],cur[0]+parsed[i][5],cur[1]+parsed[i][6]);if(curve.getTotalLength()>0){length=length+curve.getTotalLength();functions.push(curve);cur=[parsed[i][5]+cur[0],parsed[i][6]+cur[1]]}else{functions.push(new LinearPosition(cur[0],cur[0],cur[1],cur[1]))}}else if(parsed[i][0]==="S"){if(i>0&&["C","c","S","s"].indexOf(parsed[i-1][0])>-1){curve=new Bezier(cur[0],cur[1],2*cur[0]-parsed[i-1][parsed[i-1].length-4],2*cur[1]-parsed[i-1][parsed[i-1].length-3],parsed[i][1],parsed[i][2],parsed[i][3],parsed[i][4])}else{curve=new Bezier(cur[0],cur[1],cur[0],cur[1],parsed[i][1],parsed[i][2],parsed[i][3],parsed[i][4])}length=length+curve.getTotalLength();cur=[parsed[i][3],parsed[i][4]];functions.push(curve)}else if(parsed[i][0]==="s"){if(i>0&&["C","c","S","s"].indexOf(parsed[i-1][0])>-1){curve=new Bezier(cur[0],cur[1],cur[0]+curve.d.x-curve.c.x,cur[1]+curve.d.y-curve.c.y,cur[0]+parsed[i][1],cur[1]+parsed[i][2],cur[0]+parsed[i][3],cur[1]+parsed[i][4])}else{curve=new Bezier(cur[0],cur[1],cur[0],cur[1],cur[0]+parsed[i][1],cur[1]+parsed[i][2],cur[0]+parsed[i][3],cur[1]+parsed[i][4])}length=length+curve.getTotalLength();cur=[parsed[i][3]+cur[0],parsed[i][4]+cur[1]];functions.push(curve)}else if(parsed[i][0]==="Q"){if(cur[0]==parsed[i][1]&&cur[1]==parsed[i][2]){curve=new LinearPosition(parsed[i][1],parsed[i][3],parsed[i][2],parsed[i][4])}else{curve=new Bezier(cur[0],cur[1],parsed[i][1],parsed[i][2],parsed[i][3],parsed[i][4])}length=length+curve.getTotalLength();functions.push(curve);cur=[parsed[i][3],parsed[i][4]];prev_point=[parsed[i][1],parsed[i][2]]}else if(parsed[i][0]==="q"){if(!(parsed[i][1]==0&&parsed[i][2]==0)){curve=new Bezier(cur[0],cur[1],cur[0]+parsed[i][1],cur[1]+parsed[i][2],cur[0]+parsed[i][3],cur[1]+parsed[i][4])}else{curve=new LinearPosition(cur[0]+parsed[i][1],cur[0]+parsed[i][3],cur[1]+parsed[i][2],cur[1]+parsed[i][4])}length=length+curve.getTotalLength();prev_point=[cur[0]+parsed[i][1],cur[1]+parsed[i][2]];cur=[parsed[i][3]+cur[0],parsed[i][4]+cur[1]];functions.push(curve)}else if(parsed[i][0]==="T"){if(i>0&&["Q","q","T","t"].indexOf(parsed[i-1][0])>-1){curve=new Bezier(cur[0],cur[1],2*cur[0]-prev_point[0],2*cur[1]-prev_point[1],parsed[i][1],parsed[i][2])}else{curve=new LinearPosition(cur[0],parsed[i][1],cur[1],parsed[i][2])}functions.push(curve);length=length+curve.getTotalLength();prev_point=[2*cur[0]-prev_point[0],2*cur[1]-prev_point[1]];cur=[parsed[i][1],parsed[i][2]]}else if(parsed[i][0]==="t"){if(i>0&&["Q","q","T","t"].indexOf(parsed[i-1][0])>-1){curve=new Bezier(cur[0],cur[1],2*cur[0]-prev_point[0],2*cur[1]-prev_point[1],cur[0]+parsed[i][1],cur[1]+parsed[i][2])}else{curve=new LinearPosition(cur[0],cur[0]+parsed[i][1],cur[1],cur[1]+parsed[i][2])}length=length+curve.getTotalLength();prev_point=[2*cur[0]-prev_point[0],2*cur[1]-prev_point[1]];cur=[parsed[i][1]+cur[0],parsed[i][2]+cur[0]];functions.push(curve)}else if(parsed[i][0]==="A"){curve=new Arc(cur[0],cur[1],parsed[i][1],parsed[i][2],parsed[i][3],parsed[i][4],parsed[i][5],parsed[i][6],parsed[i][7]);length=length+curve.getTotalLength();cur=[parsed[i][6],parsed[i][7]];functions.push(curve)}else if(parsed[i][0]==="a"){curve=new Arc(cur[0],cur[1],parsed[i][1],parsed[i][2],parsed[i][3],parsed[i][4],parsed[i][5],cur[0]+parsed[i][6],cur[1]+parsed[i][7]);length=length+curve.getTotalLength();cur=[cur[0]+parsed[i][6],cur[1]+parsed[i][7]];functions.push(curve)}partial_lengths.push(length)}return svgProperties}svgProperties.getTotalLength=function(){return length};svgProperties.getPointAtLength=function(fractionLength){var fractionPart=getPartAtLength(fractionLength);return functions[fractionPart.i].getPointAtLength(fractionPart.fraction)};svgProperties.getTangentAtLength=function(fractionLength){var fractionPart=getPartAtLength(fractionLength);return functions[fractionPart.i].getTangentAtLength(fractionPart.fraction)};svgProperties.getPropertiesAtLength=function(fractionLength){var fractionPart=getPartAtLength(fractionLength);return functions[fractionPart.i].getPropertiesAtLength(fractionPart.fraction)};svgProperties.getParts=function(){var parts=[];for(var i=0;i<functions.length;i++){if(functions[i]!=null){var properties={};properties["start"]=functions[i].getPointAtLength(0);properties["end"]=functions[i].getPointAtLength(partial_lengths[i]-partial_lengths[i-1]);properties["length"]=partial_lengths[i]-partial_lengths[i-1];(function(func){properties["getPointAtLength"]=function(d){return func.getPointAtLength(d)};properties["getTangentAtLength"]=function(d){return func.getTangentAtLength(d)};properties["getPropertiesAtLength"]=function(d){return func.getPropertiesAtLength(d)}})(functions[i]);parts.push(properties)}}return parts};var getPartAtLength=function(fractionLength){if(fractionLength<0){fractionLength=0}else if(fractionLength>length){fractionLength=length}var i=partial_lengths.length-1;while(partial_lengths[i]>=fractionLength&&partial_lengths[i]>0){i--}i++;return{fraction:fractionLength-partial_lengths[i-1],i:i}};return svgProperties(svgString)}exports.svgPathProperties=pathProperties;exports.parse=parse;exports.Bezier=Bezier;Object.defineProperty(exports,"__esModule",{value:true})})},{}]},{},[1]);
